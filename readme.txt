Read Me

Sean McGlincy
Networking 
Assignment 6


Overview
The program will will simulate distributed network of routers using the distance vector routing 
protocal.  The program will be asynchronous and simiulate delivory times using the system clock 
in milliseconds.  The program will do the following tasks.

1) Initiallize all data structures and create four routers
2) Call init on each of the four routers
3) The routers will build the tables
4) The topology will be changed.  We update a link
	Link (0,1) change to 3
	Both router notified and update their tables
	Both routers inform neigbors
5)  The routers will build their tables
6)  Link (0,1) changed back to 1
	Repeate steps 4-5
7)  No more links are being changed 
	Router tables have updated
	Program ends.


How everything works:
Class Router:  
Class that provides  rtinit, rtupdate, sendpkt and 
linkCostChangeHandeler.  The class also has helper functions such as tostring 
and a function to re-calculate mincost before sending mincost to the other 
routers.

Class Main:  
Main function of the program.  Initiallizes the data structures and 
calls each of the routers.  This also has a toLayer2 function which is called 
by the routers.  The toLayer2 function processes the packet and adds it to an 
array queue for later processing.

The main function simulates the toLayer3 functionality by processing the 
queue made by toLayer2.  Part of this simulation is to mimic the delay times 
of the topology.  The main function checks the system's clock against the 
reciept time generated by layer 2.  The delay time is then looked up and the 
program checks if it should delivor the message.  

The main program will also change the topology of the graph by sending
updates to the router.  The program stores the links that will be changed in a 
updateQueue.  The program will process each update and inform both routers that an
update has occured, each router will update it's table with the new topolgy and inform 
it's neighbors.  The updates will take values greater than 0.


Class Pakcage:  
Data structure that holds sourceID, destinationID, minCost array.

Class DelivoryQueue
Holds delivoryTime and a package.
Simulates toLayer3

Class LinkupDateQueue
Data structure that holds router (a), router (b), newValue
This data structure lets us ues an array list in the main function.
